"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

let helpers = {},
    extensions = {};
exports.helpers = helpers;
const MAGIC_FIRST_VIS_CHILD_SEL = /\/\*\[@firstVisible ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_SEL = /\/\/\*\[@scrollable ?= ?('|")true\1\]/;
const MAGIC_SCROLLABLE_BY = "new UiSelector().scrollable(true)";

helpers.doFindElementOrEls = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (params) {
    if (params.strategy === "xpath" && MAGIC_FIRST_VIS_CHILD_SEL.test(params.selector)) {
      let elementId = params.context;
      return yield this.uiautomator2.jwproxy.command(`/appium/element/${elementId}/first_visible`, 'GET', {});
    }

    if (params.strategy === "xpath" && MAGIC_SCROLLABLE_SEL.test(params.selector)) {
      params.strategy = "-android uiautomator";
      params.selector = MAGIC_SCROLLABLE_BY;
    }

    if (params.multiple) {
      return yield this.uiautomator2.jwproxy.command(`/elements`, 'POST', params);
    } else {
      return yield this.uiautomator2.jwproxy.command(`/element`, 'POST', params);
    }
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

Object.assign(extensions, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbImhlbHBlcnMiLCJleHRlbnNpb25zIiwiTUFHSUNfRklSU1RfVklTX0NISUxEX1NFTCIsIk1BR0lDX1NDUk9MTEFCTEVfU0VMIiwiTUFHSUNfU0NST0xMQUJMRV9CWSIsImRvRmluZEVsZW1lbnRPckVscyIsInBhcmFtcyIsInN0cmF0ZWd5IiwidGVzdCIsInNlbGVjdG9yIiwiZWxlbWVudElkIiwiY29udGV4dCIsInVpYXV0b21hdG9yMiIsImp3cHJveHkiLCJjb21tYW5kIiwibXVsdGlwbGUiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQ0EsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7QUFBQSxJQUFrQkMsVUFBVSxHQUFHLEVBQS9COztBQUlBLE1BQU1DLHlCQUF5QixHQUFHLHVDQUFsQztBQUVBLE1BQU1DLG9CQUFvQixHQUFHLHVDQUE3QjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHLG1DQUE1Qjs7QUFNQUosT0FBTyxDQUFDSyxrQkFBUjtBQUFBLDZDQUE2QixXQUFnQkMsTUFBaEIsRUFBd0I7QUFDbkQsUUFBSUEsTUFBTSxDQUFDQyxRQUFQLEtBQW9CLE9BQXBCLElBQStCTCx5QkFBeUIsQ0FBQ00sSUFBMUIsQ0FBK0JGLE1BQU0sQ0FBQ0csUUFBdEMsQ0FBbkMsRUFBb0Y7QUFDbEYsVUFBSUMsU0FBUyxHQUFHSixNQUFNLENBQUNLLE9BQXZCO0FBQ0EsbUJBQWEsS0FBS0MsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQW1DLG1CQUFrQkosU0FBVSxnQkFBL0QsRUFBZ0YsS0FBaEYsRUFBdUYsRUFBdkYsQ0FBYjtBQUNEOztBQUNELFFBQUlKLE1BQU0sQ0FBQ0MsUUFBUCxLQUFvQixPQUFwQixJQUErQkosb0JBQW9CLENBQUNLLElBQXJCLENBQTBCRixNQUFNLENBQUNHLFFBQWpDLENBQW5DLEVBQStFO0FBQzdFSCxNQUFBQSxNQUFNLENBQUNDLFFBQVAsR0FBa0Isc0JBQWxCO0FBQ0FELE1BQUFBLE1BQU0sQ0FBQ0csUUFBUCxHQUFrQkwsbUJBQWxCO0FBQ0Q7O0FBQ0QsUUFBSUUsTUFBTSxDQUFDUyxRQUFYLEVBQXFCO0FBQ25CLG1CQUFhLEtBQUtILFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxXQUFuQyxFQUErQyxNQUEvQyxFQUF1RFIsTUFBdkQsQ0FBYjtBQUNELEtBRkQsTUFFTztBQUNMLG1CQUFhLEtBQUtNLFlBQUwsQ0FBa0JDLE9BQWxCLENBQTBCQyxPQUExQixDQUFtQyxVQUFuQyxFQUE4QyxNQUE5QyxFQUFzRFIsTUFBdEQsQ0FBYjtBQUNEO0FBQ0YsR0FkRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFnQkFVLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjaEIsVUFBZCxFQUEwQkQsT0FBMUI7ZUFFZUMsVSIsInNvdXJjZXNDb250ZW50IjpbIlxubGV0IGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG4vLyB3ZSBvdmVycmlkZSB0aGUgeHBhdGggc2VhcmNoIGZvciB0aGlzIGZpcnN0LXZpc2libGUtY2hpbGQgc2VsZWN0b3IsIHdoaWNoXG4vLyBsb29rcyBsaWtlIC8qW0BmaXJzdFZpc2libGU9XCJ0cnVlXCJdXG5jb25zdCBNQUdJQ19GSVJTVF9WSVNfQ0hJTERfU0VMID0gL1xcL1xcKlxcW0BmaXJzdFZpc2libGUgPz0gPygnfFwiKXRydWVcXDFcXF0vO1xuXG5jb25zdCBNQUdJQ19TQ1JPTExBQkxFX1NFTCA9IC9cXC9cXC9cXCpcXFtAc2Nyb2xsYWJsZSA/PSA/KCd8XCIpdHJ1ZVxcMVxcXS87XG5jb25zdCBNQUdJQ19TQ1JPTExBQkxFX0JZID0gXCJuZXcgVWlTZWxlY3RvcigpLnNjcm9sbGFibGUodHJ1ZSlcIjtcblxuLyoqXG4gKiBPdmVycmlkaW5nIGhlbHBlcnMuZG9GaW5kRWxlbWVudE9yRWxzIGZ1bmN0aW9uYWxpdHkgb2YgYXBwaXVtLWFuZHJvaWQtZHJpdmVyLFxuICogdGhpcy5lbGVtZW50IGluaXRpYWxpemVkIGluIGZpbmQuanMgb2YgYXBwaXVtLWFuZHJvaWQtZHJpdmUuXG4gKi9cbmhlbHBlcnMuZG9GaW5kRWxlbWVudE9yRWxzID0gYXN5bmMgZnVuY3Rpb24gKHBhcmFtcykge1xuICBpZiAocGFyYW1zLnN0cmF0ZWd5ID09PSBcInhwYXRoXCIgJiYgTUFHSUNfRklSU1RfVklTX0NISUxEX1NFTC50ZXN0KHBhcmFtcy5zZWxlY3RvcikpIHtcbiAgICBsZXQgZWxlbWVudElkID0gcGFyYW1zLmNvbnRleHQ7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZChgL2FwcGl1bS9lbGVtZW50LyR7ZWxlbWVudElkfS9maXJzdF92aXNpYmxlYCwgJ0dFVCcsIHt9KTtcbiAgfVxuICBpZiAocGFyYW1zLnN0cmF0ZWd5ID09PSBcInhwYXRoXCIgJiYgTUFHSUNfU0NST0xMQUJMRV9TRUwudGVzdChwYXJhbXMuc2VsZWN0b3IpKSB7XG4gICAgcGFyYW1zLnN0cmF0ZWd5ID0gXCItYW5kcm9pZCB1aWF1dG9tYXRvclwiO1xuICAgIHBhcmFtcy5zZWxlY3RvciA9IE1BR0lDX1NDUk9MTEFCTEVfQlk7XG4gIH1cbiAgaWYgKHBhcmFtcy5tdWx0aXBsZSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoYC9lbGVtZW50c2AsICdQT1NUJywgcGFyYW1zKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy51aWF1dG9tYXRvcjIuandwcm94eS5jb21tYW5kKGAvZWxlbWVudGAsICdQT1NUJywgcGFyYW1zKTtcbiAgfVxufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGhlbHBlcnMgfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy9maW5kLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
