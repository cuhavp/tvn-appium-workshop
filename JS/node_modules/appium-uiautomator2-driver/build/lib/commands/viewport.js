"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.commands = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _appiumSupport = require("appium-support");

let extensions = {},
    commands = {};
exports.commands = commands;
commands.getStatusBarHeight = (0, _asyncToGenerator2.default)(function* () {
  const _ref2 = yield this.uiautomator2.jwproxy.command(`/appium/device/system_bars`, 'GET', {}),
        statusBar = _ref2.statusBar;

  return statusBar;
});
commands.getDevicePixelRatio = (0, _asyncToGenerator2.default)(function* () {
  return yield this.uiautomator2.jwproxy.command('/appium/device/pixel_ratio', 'GET', {});
});
commands.getViewportScreenshot = (0, _asyncToGenerator2.default)(function* () {
  const screenshot = yield this.getScreenshot();
  const rect = yield this.getViewPortRect();
  return yield _appiumSupport.imageUtil.cropBase64Image(screenshot, rect);
});
commands.getViewPortRect = (0, _asyncToGenerator2.default)(function* () {
  const windowSize = yield this.getWindowSize();
  const statusBarHeight = yield this.getStatusBarHeight();
  return {
    left: 0,
    top: statusBarHeight,
    width: windowSize.width,
    height: windowSize.height - statusBarHeight
  };
});
Object.assign(extensions, commands);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy92aWV3cG9ydC5qcyJdLCJuYW1lcyI6WyJleHRlbnNpb25zIiwiY29tbWFuZHMiLCJnZXRTdGF0dXNCYXJIZWlnaHQiLCJ1aWF1dG9tYXRvcjIiLCJqd3Byb3h5IiwiY29tbWFuZCIsInN0YXR1c0JhciIsImdldERldmljZVBpeGVsUmF0aW8iLCJnZXRWaWV3cG9ydFNjcmVlbnNob3QiLCJzY3JlZW5zaG90IiwiZ2V0U2NyZWVuc2hvdCIsInJlY3QiLCJnZXRWaWV3UG9ydFJlY3QiLCJpbWFnZVV0aWwiLCJjcm9wQmFzZTY0SW1hZ2UiLCJ3aW5kb3dTaXplIiwiZ2V0V2luZG93U2l6ZSIsInN0YXR1c0JhckhlaWdodCIsImxlZnQiLCJ0b3AiLCJ3aWR0aCIsImhlaWdodCIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFHQSxJQUFJQSxVQUFVLEdBQUcsRUFBakI7QUFBQSxJQUFxQkMsUUFBUSxHQUFHLEVBQWhDOztBQUdBQSxRQUFRLENBQUNDLGtCQUFULG1DQUE4QixhQUFrQjtBQUFBLHNCQUNwQixLQUFLQyxZQUFMLENBQWtCQyxPQUFsQixDQUEwQkMsT0FBMUIsQ0FBbUMsNEJBQW5DLEVBQWdFLEtBQWhFLEVBQXVFLEVBQXZFLENBRG9CO0FBQUEsUUFDdkNDLFNBRHVDLFNBQ3ZDQSxTQUR1Qzs7QUFFOUMsU0FBT0EsU0FBUDtBQUNELENBSEQ7QUFNQUwsUUFBUSxDQUFDTSxtQkFBVCxtQ0FBK0IsYUFBa0I7QUFDL0MsZUFBYSxLQUFLSixZQUFMLENBQWtCQyxPQUFsQixDQUEwQkMsT0FBMUIsQ0FBa0MsNEJBQWxDLEVBQWdFLEtBQWhFLEVBQXVFLEVBQXZFLENBQWI7QUFDRCxDQUZEO0FBSUFKLFFBQVEsQ0FBQ08scUJBQVQsbUNBQWlDLGFBQWtCO0FBQ2pELFFBQU1DLFVBQVUsU0FBUyxLQUFLQyxhQUFMLEVBQXpCO0FBQ0EsUUFBTUMsSUFBSSxTQUFTLEtBQUtDLGVBQUwsRUFBbkI7QUFDQSxlQUFhQyx5QkFBVUMsZUFBVixDQUEwQkwsVUFBMUIsRUFBc0NFLElBQXRDLENBQWI7QUFDRCxDQUpEO0FBTUFWLFFBQVEsQ0FBQ1csZUFBVCxtQ0FBMkIsYUFBa0I7QUFDM0MsUUFBTUcsVUFBVSxTQUFTLEtBQUtDLGFBQUwsRUFBekI7QUFDQSxRQUFNQyxlQUFlLFNBQVMsS0FBS2Ysa0JBQUwsRUFBOUI7QUFHQSxTQUFPO0FBQ0xnQixJQUFBQSxJQUFJLEVBQUUsQ0FERDtBQUVMQyxJQUFBQSxHQUFHLEVBQUVGLGVBRkE7QUFHTEcsSUFBQUEsS0FBSyxFQUFFTCxVQUFVLENBQUNLLEtBSGI7QUFJTEMsSUFBQUEsTUFBTSxFQUFFTixVQUFVLENBQUNNLE1BQVgsR0FBb0JKO0FBSnZCLEdBQVA7QUFNRCxDQVhEO0FBYUFLLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjdkIsVUFBZCxFQUEwQkMsUUFBMUI7ZUFFZUQsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGltYWdlVXRpbCB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcblxuXG5sZXQgZXh0ZW5zaW9ucyA9IHt9LCBjb21tYW5kcyA9IHt9O1xuXG4vLyBtZW1vaXplZCBpbiBjb25zdHJ1Y3RvclxuY29tbWFuZHMuZ2V0U3RhdHVzQmFySGVpZ2h0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICBjb25zdCB7c3RhdHVzQmFyfSA9IGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZChgL2FwcGl1bS9kZXZpY2Uvc3lzdGVtX2JhcnNgLCAnR0VUJywge30pO1xuICByZXR1cm4gc3RhdHVzQmFyO1xufTtcblxuLy8gbWVtb2l6ZWQgaW4gY29uc3RydWN0b3JcbmNvbW1hbmRzLmdldERldmljZVBpeGVsUmF0aW8gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoJy9hcHBpdW0vZGV2aWNlL3BpeGVsX3JhdGlvJywgJ0dFVCcsIHt9KTtcbn07XG5cbmNvbW1hbmRzLmdldFZpZXdwb3J0U2NyZWVuc2hvdCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgY29uc3Qgc2NyZWVuc2hvdCA9IGF3YWl0IHRoaXMuZ2V0U2NyZWVuc2hvdCgpO1xuICBjb25zdCByZWN0ID0gYXdhaXQgdGhpcy5nZXRWaWV3UG9ydFJlY3QoKTtcbiAgcmV0dXJuIGF3YWl0IGltYWdlVXRpbC5jcm9wQmFzZTY0SW1hZ2Uoc2NyZWVuc2hvdCwgcmVjdCk7XG59O1xuXG5jb21tYW5kcy5nZXRWaWV3UG9ydFJlY3QgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHdpbmRvd1NpemUgPSBhd2FpdCB0aGlzLmdldFdpbmRvd1NpemUoKTtcbiAgY29uc3Qgc3RhdHVzQmFySGVpZ2h0ID0gYXdhaXQgdGhpcy5nZXRTdGF0dXNCYXJIZWlnaHQoKTtcbiAgLy8gYW5kcm9pZCByZXR1cm5zIHRoZSB1cHNjYWxlZCB3aW5kb3cgc2l6ZSwgc28gdG8gZ2V0IHRoZSB0cnVlIHNpemUgb2YgdGhlXG4gIC8vIHJlY3Qgd2UgaGF2ZSB0byBkb3duc2NhbGVcbiAgcmV0dXJuIHtcbiAgICBsZWZ0OiAwLFxuICAgIHRvcDogc3RhdHVzQmFySGVpZ2h0LFxuICAgIHdpZHRoOiB3aW5kb3dTaXplLndpZHRoLFxuICAgIGhlaWdodDogd2luZG93U2l6ZS5oZWlnaHQgLSBzdGF0dXNCYXJIZWlnaHRcbiAgfTtcbn07XG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgY29tbWFuZHMpO1xuZXhwb3J0IHsgY29tbWFuZHMgfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXSwiZmlsZSI6ImxpYi9jb21tYW5kcy92aWV3cG9ydC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
